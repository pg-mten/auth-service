// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "typedSql"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth"]
}

model Role {
  id   Int    @unique @default(autoincrement())
  name String @db.VarChar()

  created_at DateTime  @default(now())
  created_by Int?      @db.Integer()
  updated_at DateTime? @updatedAt()
  updated_by Int?      @db.Integer()
  deleted_at DateTime? @db.Timestamp()

  Permission Permission[]
  User       User[]

  @@map("roles")
  @@schema("auth")
}

model Permission {
  id         Int      @unique @default(autoincrement())
  role       Role?    @relation(fields: [role_id], references: [id])
  role_id    Int?     @db.Integer()
  action     String   @db.VarChar()
  subject    String   @db.VarChar()
  inverted   Boolean  @default(false)
  field      String[] @db.VarChar()
  conditions Json?    @db.JsonB()
  reason     String?  @db.Text()

  created_at DateTime  @default(now())
  created_by Int?      @db.Integer()
  updated_at DateTime? @updatedAt()
  updated_by Int?      @db.Integer()
  deleted_at DateTime? @db.Timestamp()

  @@map("permissions")
  @@schema("auth")
}

model User {
  id       Int    @unique @default(autoincrement())
  username String @unique
  email    String @unique @db.VarChar(255)
  password String

  role    Role @relation(fields: [role_id], references: [id])
  role_id Int  @db.Integer()

  agentDetail AgentDetail?

  merchantDetail MerchantDetail?

  created_at DateTime  @default(now())
  created_by Int?      @db.Integer()
  updated_at DateTime? @updatedAt()
  updated_by Int?      @db.Integer()
  deleted_at DateTime? @db.Timestamp()

  @@map("users")
  @@schema("auth")
}

model AgentDetail {
  id                  Int    @id @default(autoincrement())
  fullname            String
  address             String
  phone               String
  bank_name           String @db.VarChar(100) // contoh: "BCA", "BRI"
  account_number      String @db.VarChar(50)
  account_holder_name String @db.VarChar(100)

  created_at DateTime  @default(now())
  created_by Int?      @db.Integer()
  updated_at DateTime? @updatedAt()
  updated_by Int?      @db.Integer()
  deleted_at DateTime? @db.Timestamp()

  user      User            @relation(fields: [user_id], references: [id])
  user_id   Int             @unique // âœ… satu agent detail hanya milik satu user
  merchants AgentMerchant[]

  @@map("agentDetail")
  @@schema("auth")
}

model MerchantDetail {
  id                  Int    @id @default(autoincrement())
  businessName        String
  npwp                String
  address             String
  bank_name           String @db.VarChar(100)
  account_number      String @db.VarChar(50)
  account_holder_name String @db.VarChar(100)

  created_at DateTime  @default(now())
  created_by Int?      @db.Integer()
  updated_at DateTime? @updatedAt()
  updated_by Int?      @db.Integer()
  deleted_at DateTime? @db.Timestamp()

  users   User            @relation(fields: [user_id], references: [id])
  user_id Int             @unique
  agents  AgentMerchant[]

  @@map("merchantDetail")
  @@schema("auth")
}

model AgentMerchant {
  agent_id    Int
  merchant_id Int

  agent    AgentDetail    @relation(fields: [agent_id], references: [id])
  merchant MerchantDetail @relation(fields: [merchant_id], references: [id])

  assigned_at DateTime @default(now())

  created_at DateTime  @default(now())
  created_by Int?      @db.Integer()
  updated_at DateTime? @updatedAt()
  updated_by Int?      @db.Integer()
  deleted_at DateTime? @db.Timestamp()

  @@id([agent_id, merchant_id]) // composite primary key
  @@map("agent_merchants")
  @@schema("auth")
}
