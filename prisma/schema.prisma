// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "typedSql"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth"]
}

model Role {
  id   Int    @unique @default(autoincrement())
  name String @db.VarChar()

  createdAt DateTime  @default(now())
  createdBy Int?      @db.Integer()
  updatedAt DateTime? @updatedAt()
  updatedBy Int?      @db.Integer()
  deletedAt DateTime? @db.Timestamp()

  Permission Permission[]
  User       User[]

  @@schema("auth")
}

model Permission {
  id         Int      @unique @default(autoincrement())
  action     String   @db.VarChar()
  subject    String   @db.VarChar()
  inverted   Boolean  @default(false)
  field      String[] @db.VarChar()
  conditions Json?    @db.JsonB()
  reason     String?  @db.Text()

  role   Role? @relation(fields: [roleId], references: [id])
  roleId Int?  @db.Integer()

  createdAt DateTime  @default(now())
  createdBy Int?      @db.Integer()
  updatedAt DateTime? @updatedAt()
  updatedBy Int?      @db.Integer()
  deletedAt DateTime? @db.Timestamp()

  @@schema("auth")
}

model User {
  id       Int    @unique @default(autoincrement())
  username String @unique
  email    String @unique @db.VarChar(255)
  password String

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int  @db.Integer()

  createdAt DateTime  @default(now())
  createdBy Int?      @db.Integer()
  updatedAt DateTime? @updatedAt()
  updatedBy Int?      @db.Integer()
  deletedAt DateTime? @db.Timestamp()

  AgentDetail    AgentDetail?
  MerchantDetail MerchantDetail?
  AdminDetail    AdminDetail?

  @@schema("auth")
}

model AdminDetail {
  id       Int    @id @default(autoincrement())
  fullname String
  address  String
  phone    String

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  createdAt DateTime  @default(now())
  createdBy Int?      @db.Integer()
  updatedAt DateTime? @updatedAt()
  updatedBy Int?      @db.Integer()
  deletedAt DateTime? @db.Timestamp()

  @@schema("auth")
}

model AgentDetail {
  id                Int     @id @default(autoincrement())
  fullname          String
  address           String
  phone             String
  bankName          String  @db.VarChar(100) // contoh: "BCA", "BRI"
  accountNumber     String  @db.VarChar(50)
  accountHolderName String  @db.VarChar(100)
  balance           Decimal @default(0.0)

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  createdAt DateTime  @default(now())
  createdBy Int?      @db.Integer()
  updatedAt DateTime? @updatedAt()
  updatedBy Int?      @db.Integer()
  deletedAt DateTime? @db.Timestamp()

  @@schema("auth")
}

model MerchantDetail {
  id                Int     @id @default(autoincrement())
  businessName      String
  npwp              String
  address           String
  bankName          String  @db.VarChar(100)
  accountNumber     String  @db.VarChar(50)
  accountHolderName String  @db.VarChar(100)
  balance           Decimal @default(0.0)

  users  User @relation(fields: [userId], references: [id])
  userId Int  @unique

  createdAt DateTime  @default(now())
  createdBy Int?      @db.Integer()
  updatedAt DateTime? @updatedAt()
  updatedBy Int?      @db.Integer()
  deletedAt DateTime? @db.Timestamp()

  @@schema("auth")
}
